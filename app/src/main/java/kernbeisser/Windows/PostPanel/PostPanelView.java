package kernbeisser.Windows.PostPanel;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import java.awt.*;
import javax.swing.*;
import javax.swing.text.html.HTMLEditorKit;
import kernbeisser.Windows.MVC.IView;
import kernbeisser.Windows.MVC.Linked;
import org.jetbrains.annotations.NotNull;

public class PostPanelView implements IView<PostPanelController> {

  private JPanel main;
  private JSplitPane splitter;
  private JTextPane displayPane;
  private JEditorPane editorPane;
  private JButton back;
  private JButton edit;
  private JButton reset;
  private JButton preview;
  private JCheckBox active;

  @Linked private PostPanelController controller;

  @Override
  public void initialize(PostPanelController controller) {
    editorPane.setVisible(false);
    displayPane.setEditorKit(new HTMLEditorKit());
    displayPane.setEditable(false);
    back.addActionListener(e -> back());
    edit.addActionListener(e -> controller.toggleEditing());
    reset.addActionListener(e -> reset());
    preview.setVisible(false);
    preview.addActionListener(e -> previewText());
    active.addActionListener(e -> controller.setActive(active.isSelected()));
    reset.setVisible(false);
  }

  public void setHtmlContent(String htmlContent) {
    this.displayPane.setText(htmlContent);
  }

  public void setActive(boolean active) {
    this.active.setSelected(active);
  }

  public void setEditable(boolean isEditable) {
    edit.setEnabled(isEditable);
    edit.setVisible(isEditable);
  }

  public void startEditSession() {
    editorPane.setText(displayPane.getText());
    editorPane.setVisible(true);
    splitter.setDividerLocation(0.3);
    edit.setText("Speichern");
    preview.setVisible(true);
    reset.setVisible(true);
  }

  public void reset() {
    controller.resetContent();
    editorPane.setText(displayPane.getText());
  }

  public void stopEditSession() {
    previewText();
    controller.saveContent(displayPane.getText());
    editorPane.setVisible(false);
    edit.setText("Bearbeiten");
    preview.setVisible(false);
    reset.setVisible(false);
  }

  public void setActiveVisible(boolean visible) {
    active.setVisible(visible);
  }

  private void previewText() {
    displayPane.setText(editorPane.getText());
  }

  @Override
  public @NotNull JComponent getContent() {
    return main;
  }

  @Override
  public @NotNull Dimension getSize() {
    return new Dimension(500, 500);
  }

  @Override
  public String getTitle() {
    return "Info";
  }

  {
    // GUI initializer generated by IntelliJ IDEA GUI Designer
    // >>> IMPORTANT!! <<<
    // DO NOT EDIT OR ADD ANY CODE HERE!
    $$$setupUI$$$();
  }

  /**
   * Method generated by IntelliJ IDEA GUI Designer >>> IMPORTANT!! <<< DO NOT edit this method OR
   * call it in your code!
   *
   * @noinspection ALL
   */
  private void $$$setupUI$$$() {
    main = new JPanel();
    main.setLayout(new GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
    splitter = new JSplitPane();
    main.add(
        splitter,
        new GridConstraints(
            0,
            0,
            1,
            1,
            GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_BOTH,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW,
            null,
            null,
            null,
            0,
            false));
    displayPane = new JTextPane();
    displayPane.setMinimumSize(new Dimension(200, 23));
    displayPane.setPreferredSize(new Dimension(-1, -1));
    displayPane.putClientProperty("charset", "");
    splitter.setRightComponent(displayPane);
    editorPane = new JEditorPane();
    editorPane.setMaximumSize(new Dimension(500, 2147483647));
    editorPane.setMinimumSize(new Dimension(200, 23));
    editorPane.setPreferredSize(new Dimension(-1, -1));
    editorPane.setText("");
    splitter.setLeftComponent(editorPane);
    final JPanel panel1 = new JPanel();
    panel1.setLayout(new GridBagLayout());
    main.add(
        panel1,
        new GridConstraints(
            1,
            0,
            1,
            1,
            GridConstraints.ANCHOR_EAST,
            GridConstraints.FILL_VERTICAL,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW,
            1,
            null,
            null,
            null,
            0,
            false));
    edit = new JButton();
    edit.setText("Bearbeiten");
    edit.setVisible(true);
    GridBagConstraints gbc;
    gbc = new GridBagConstraints();
    gbc.gridx = 3;
    gbc.gridy = 0;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    gbc.insets = new Insets(5, 5, 5, 5);
    panel1.add(edit, gbc);
    back = new JButton();
    back.setText("Schließen");
    gbc = new GridBagConstraints();
    gbc.gridx = 5;
    gbc.gridy = 0;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    gbc.insets = new Insets(5, 5, 5, 5);
    panel1.add(back, gbc);
    final JPanel spacer1 = new JPanel();
    gbc = new GridBagConstraints();
    gbc.gridx = 4;
    gbc.gridy = 0;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    panel1.add(spacer1, gbc);
    preview = new JButton();
    preview.setText("Vorschau");
    gbc = new GridBagConstraints();
    gbc.gridx = 1;
    gbc.gridy = 0;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    gbc.insets = new Insets(5, 5, 5, 5);
    panel1.add(preview, gbc);
    active = new JCheckBox();
    active.setText("Aktiv");
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 0;
    gbc.anchor = GridBagConstraints.WEST;
    gbc.insets = new Insets(0, 5, 0, 5);
    panel1.add(active, gbc);
    reset = new JButton();
    reset.setText("Zurücksetzen");
    gbc = new GridBagConstraints();
    gbc.gridx = 2;
    gbc.gridy = 0;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    gbc.insets = new Insets(5, 5, 5, 5);
    panel1.add(reset, gbc);
  }

  /**
   * @noinspection ALL
   */
  public JComponent $$$getRootComponent$$$() {
    return main;
  }
}
