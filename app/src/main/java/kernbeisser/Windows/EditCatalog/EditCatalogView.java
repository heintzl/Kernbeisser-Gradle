package kernbeisser.Windows.EditCatalog;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import java.awt.*;
import javax.swing.*;

import kernbeisser.DBEntities.Article;
import kernbeisser.DBEntities.Article_;
import kernbeisser.DBEntities.CatalogEntry;
import kernbeisser.Forms.ObjectView.ObjectViewView;
import kernbeisser.Useful.Tools;
import kernbeisser.Windows.MVC.IView;
import kernbeisser.Windows.MVC.Linked;
import org.jetbrains.annotations.NotNull;

public class EditCatalogView implements IView<EditCatalogController> {

  private JPanel main;
  private ObjectViewView<CatalogEntry> objectView;

  @Linked private EditCatalogController controller;

  public void messageBarcodeNotFound(String s) {
    Tools.beep();
    JOptionPane.showMessageDialog(
        getContent(),
        "Konnte keinen Katalog-Artikel mit Barcode \"" + s + "\" finden",
        "Eintrag nicht gefunden",
        JOptionPane.INFORMATION_MESSAGE);
  }

  public boolean confirmNewArticle(CatalogEntry entry) {
    Tools.beep();
    return JOptionPane.showConfirmDialog(getContent(),
            "Soll der Katalogeintrag \"%s\" in den Artikelstamm übernommen werden?\n".formatted(entry.getBezeichnung()),
            "Neuen Stammartikel erstellen",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE
    ) == JOptionPane.YES_OPTION;
  }

  public boolean confirmOffer(Article article) {
    Tools.beep();
    return JOptionPane.showConfirmDialog(getContent(),
            "Soll der Artikel %d \"%s\" als Aktion markiert werden?".formatted(article.getKbNumber(), article.getName()),
            "Aktion bestätigen",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE
    ) == JOptionPane.YES_OPTION;
  }

  public void pasteInSearchBox(String s) {}

  @Override
  public void initialize(EditCatalogController controller) {}

  @Override
  public @NotNull JComponent getContent() {
    return main;
  }

  @Override
  public String getTitle() {
    return "Großhandels-Katalog";
  }

  private void createUIComponents() {
    objectView = controller.getObjectView();
  }

  // @spotless:off

  {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
    $$$setupUI$$$();
  }

  /**
   * Method generated by IntelliJ IDEA GUI Designer
   * >>> IMPORTANT!! <<<
   * DO NOT edit this method OR call it in your code!
   *
   * @noinspection ALL
   */
  private void $$$setupUI$$$() {
    createUIComponents();
    main = new JPanel();
    main.setLayout(new GridLayoutManager(2, 2, new Insets(0, 0, 0, 0), -1, -1));
    final JPanel panel1 = new JPanel();
    panel1.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
    main.add(panel1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
    final JPanel panel2 = new JPanel();
    panel2.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
    panel1.add(panel2, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, new Dimension(-1, 50), 0, false));
    final JLabel label1 = new JLabel();
    label1.setText("Suche nach Lieferantenartikelnummer, Barcode (die letzten vier Stellen) oder Preisliste");
    panel2.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 1, false));
    final Spacer spacer1 = new Spacer();
    panel1.add(spacer1, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
    final Spacer spacer2 = new Spacer();
    main.add(spacer2, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
    main.add(objectView.$$$getRootComponent$$$(), new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
  }

  /**
   * @noinspection ALL
   */
  public JComponent $$$getRootComponent$$$() {
    return main;
  }

  // @spotless:on
}
