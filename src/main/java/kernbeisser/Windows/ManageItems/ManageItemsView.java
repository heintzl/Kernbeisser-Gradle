/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kernbeisser.Windows.ManageItems;

import kernbeisser.CustomComponents.DBTable.DBTable;
import kernbeisser.CustomComponents.ObjectTable.Column;
import kernbeisser.CustomComponents.ObjectTable.ObjectTable;
import kernbeisser.CustomComponents.PriceListTree;
import kernbeisser.DBEntitys.Item;
import kernbeisser.DBEntitys.ItemKK;
import kernbeisser.DBEntitys.PriceList;
import kernbeisser.DBEntitys.Supplier;
import kernbeisser.Enums.ContainerDefinition;
import kernbeisser.Enums.Cooling;
import kernbeisser.Enums.Unit;
import kernbeisser.Exeptions.IncorrectInput;
import kernbeisser.Useful.Checker;
import kernbeisser.Useful.Tools;
import kernbeisser.Useful.Translator;
import kernbeisser.Windows.ManageItems.EditItem.EditItemView;
import kernbeisser.Windows.View;
import kernbeisser.Windows.Window;

import javax.swing.*;
import java.awt.*;
import java.sql.Date;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Collection;

/**
 *
 * @author julik
 */
public class ManageItemsView extends Window implements View {
    private ManageItemsController controller;
    private Translator t = new Translator();
    private ObjectTable<Item> kbItems;
    private ObjectTable<ItemKK> kkItems;
    /**
     * Creates new form AddItems
     */
    public ManageItemsView(Window current) {
        super(current);
        new EditItemView(this);
        initComponents();
        itemPriceList.setSelectedItem(PriceList.getSingleItemPriceList());
        Tools.forEach(Unit.values(), e -> itemUnit.addItem(t.translate(e)));
        Tools.forEach(ContainerDefinition.values(), e -> itemContainerDef.addItem(t.translate(e)));
        itemVAThigh.addActionListener(e -> itemVATlow.setSelected(!itemVAThigh.isSelected()));
        itemVATlow.addActionListener(e -> itemVAThigh.setSelected(!itemVATlow.isSelected()));
        kbItems= new ObjectTable<>(
                Item.getAll(null),
                Column.create("Name", Item::getName),
                Column.create("Preis", Item::calculatePrice),
                Column.create("Menge", Item::getAmount),
                Column.create("Artikel-Nummer", Item::getKbNumber),
                Column.create("Wiegbar", Item::isWeighAble),
                Column.create("Gel\u00f6scht", Item::isDeleted)
        );
        kbItems.addSelectionListener(e -> controller.pasteKbItem());
        searchSolutionPane.addTab("Ergebnisse",new JScrollPane(kbItems));
        kkItems = new DBTable<>("select i from ItemKK i",
                Column.create("Kornkraft-Nummer", ItemKK::getKkNumber),
                Column.create("Name",ItemKK::getName),
                Column.create("Barcode",ItemKK::getBarcode),
                Column.create("Preis",ItemKK::getNetPrice),
                Column.create("Menge",ItemKK::getAmount),
                Column.create("Einheit",ItemKK::getUnit)
        );
        kkItems.addSelectionListener(e -> controller.pasteKkItem());
        controller = new ManageItemsController(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new JPanel();
        searchBar = new JTextField();
        filter = new JButton();
        jLabel1 = new JLabel();
        searchSolutionPane = new JTabbedPane();
        searchInCatalog = new JCheckBox();
        jPanel2 = new JPanel();
        save = new JButton();
        jLabel3 = new JLabel();
        jLabel4 = new JLabel();
        jLabel5 = new JLabel();
        jLabel6 = new JLabel();
        jLabel7 = new JLabel();
        jLabel8 = new JLabel();
        jLabel9 = new JLabel();
        jLabel10 = new JLabel();
        jLabel12 = new JLabel();
        jLabel11 = new JLabel();
        jLabel13 = new JLabel();
        jLabel14 = new JLabel();
        jLabel15 = new JLabel();
        itemListed = new JLabel();
        jLabel18 = new JLabel();
        jPanel3 = new JPanel();
        jLabel19 = new JLabel();
        jLabel20 = new JLabel();
        jLabel21 = new JLabel();
        jLabel23 = new JLabel();
        jLabel24 = new JLabel();
        itemLastBuy = new JLabel();
        itemSold = new JLabel();
        itemInvStock = new JLabel();
        itemLastDelivery = new JLabel();
        itemInvPrice = new JLabel();
        jLabel16 = new JLabel();
        itemLoss = new JLabel();
        itemName = new JTextField();
        itemSupplierNumber = new JTextField();
        itemNetPrice = new JTextField();
        itemSingleDeposit = new JTextField();
        itemAmount = new JTextField();
        itemContainerSize = new JTextField();
        itemPriceList = new JComboBox<>();
        itemSellPrice = new JTextField();
        itemCrateDeposit = new JTextField();
        itemUnit = new JComboBox<>();
        itemContainerDef = new JComboBox<>();
        itemBarcode = new JTextField();
        itemVATlow = new JCheckBox();
        itemVAThigh = new JCheckBox();
        itemSearchPriceList = new JButton();
        itemShowInShop = new JCheckBox();
        itemWeighAble = new JCheckBox();
        jScrollPane1 = new JScrollPane();
        itemInfo = new JTextArea();
        jLabel17 = new JLabel();
        jLabel22 = new JLabel();
        itemKbNumber = new JTextField();
        itemSupplier = new JComboBox<>();
        jLabel2 = new JLabel();

        setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);

        jPanel1.setBorder(BorderFactory.createLineBorder(new Color(0, 0, 0)));

        searchBar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchBarKeyReleased(evt);
            }
        });

        filter.setText("Filter");
        filter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterActionPerformed(evt);
            }
        });

        jLabel1.setText("Artikelname, Barcode oder Kernbeissernummer");

        searchInCatalog.setText("Katalog");
        searchInCatalog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchInCatalogActionPerformed(evt);
            }
        });

        GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(107, 107, 107)
                                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel1)
                                                .addContainerGap(224, Short.MAX_VALUE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(searchBar)
                                                .addGap(18, 18, 18)
                                                .addComponent(filter)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(searchInCatalog)
                                                .addGap(16, 16, 16))))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(searchSolutionPane, GroupLayout.DEFAULT_SIZE, 517, Short.MAX_VALUE)
                                .addGap(20, 20, 20))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(jLabel1)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                                .addComponent(filter)
                                                .addComponent(searchInCatalog))
                                        .addComponent(searchBar, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(searchSolutionPane)
                                .addContainerGap())
        );

        jPanel2.setBorder(BorderFactory.createLineBorder(new Color(0, 0, 0)));

        save.setText("Speichern");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        jLabel3.setText("Produktname");

        jLabel4.setText("Liefantenartikelnummer");

        jLabel5.setText("Lieferant");

        jLabel6.setText("Nettopreis[\u20AC]");

        jLabel7.setText("Einzelpfand[\u20AC]");

        jLabel8.setText("Verkaufspreis[\u20AC]");

        jLabel9.setText("Kistenpfand[\u20AC]");

        jLabel10.setText("Preisliste");

        jLabel12.setText("Packungs-Menge");

        jLabel11.setText("Einheit");

        jLabel13.setText("Gebindegr\u00f6ße");

        jLabel14.setText("Gebindedefinition");

        jLabel15.setText("Barcode");

        itemListed.setFont(new Font("Tahoma", 1, 11)); // NOI18N
        itemListed.setForeground(new Color(255, 153, 51));
        itemListed.setText("Status");

        jLabel18.setText("Mehrwertsteuer");

        jPanel3.setBorder(BorderFactory.createTitledBorder("Statistik"));

        jLabel19.setText("Letzter verkauf:");

        jLabel20.setText("Letzte lieferung:");

        jLabel21.setText("Verkauft seit Inventur:");

        jLabel23.setText("Inventur Bestandt");

        jLabel24.setText("Inventurpreis");

        itemLastBuy.setText("Value");

        itemSold.setText("Value");

        itemInvStock.setText("Value");

        itemLastDelivery.setText("Value");

        itemInvPrice.setText("Value");

        jLabel16.setText("Schwund");

        itemLoss.setText("Value");

        GroupLayout jPanel3Layout = new GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel19)
                                        .addComponent(jLabel21)
                                        .addComponent(itemLastBuy)
                                        .addComponent(itemSold)
                                        .addComponent(jLabel23)
                                        .addComponent(itemInvStock))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel20)
                                        .addComponent(jLabel24)
                                        .addComponent(itemLastDelivery)
                                        .addComponent(itemInvPrice)
                                        .addComponent(jLabel16)
                                        .addComponent(itemLoss))
                                .addGap(141, 141, 141))
        );
        jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addComponent(jLabel19))
                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(jLabel20)))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(itemLastBuy)
                                        .addComponent(itemLastDelivery))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel21)
                                        .addComponent(jLabel16))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(itemSold)
                                        .addComponent(itemLoss))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel23)
                                        .addComponent(jLabel24))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(itemInvStock)
                                        .addComponent(itemInvPrice)))
        );

        itemVATlow.setText("7%");

        itemVAThigh.setText("19%");

        itemSearchPriceList.setText("Search");
        itemSearchPriceList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemSearchPriceListActionPerformed(evt);
            }
        });

        itemShowInShop.setText("Einblenden in der Einkaufsmaske");

        itemWeighAble.setText("Auswiegware");

        itemInfo.setColumns(20);
        itemInfo.setRows(5);
        jScrollPane1.setViewportView(itemInfo);

        jLabel17.setHorizontalAlignment(SwingConstants.CENTER);
        jLabel17.setText("Zusatztinfo");

        jLabel22.setText("Laden-Artikelnummer");

        GroupLayout jPanel2Layout = new GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                        .addGroup(GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                                                .addGap(0, 0, Short.MAX_VALUE)
                                                                .addComponent(save))
                                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                                .addComponent(jLabel3)
                                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(itemListed)))
                                                .addContainerGap())
                                        .addGroup(GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                                                        .addGroup(GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                                        .addComponent(jLabel6)
                                                                        .addComponent(jLabel7)
                                                                        .addComponent(jLabel10)
                                                                        .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                                                                .addComponent(jLabel13)
                                                                                .addComponent(itemSingleDeposit, GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                                                                                .addComponent(jLabel12)
                                                                                .addComponent(itemAmount)
                                                                                .addComponent(itemContainerSize))
                                                                        .addComponent(itemNetPrice, GroupLayout.PREFERRED_SIZE, 160, GroupLayout.PREFERRED_SIZE))
                                                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                                                .addGap(48, 48, 48)
                                                                                .addComponent(jLabel8))
                                                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                                                .addGap(48, 48, 48)
                                                                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                                                        .addComponent(itemCrateDeposit, GroupLayout.Alignment.TRAILING)
                                                                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                                                                .addComponent(jLabel9)
                                                                                                .addGap(0, 0, Short.MAX_VALUE))
                                                                                        .addComponent(itemSellPrice)))
                                                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                                                .addGap(50, 50, 50)
                                                                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                                                                        .addComponent(itemUnit, 0, 221, Short.MAX_VALUE)
                                                                                        .addComponent(jLabel11)
                                                                                        .addComponent(jLabel14)
                                                                                        .addComponent(itemContainerDef, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                                                        .addGroup(GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                                                        .addComponent(jLabel15)
                                                                        .addComponent(itemName)
                                                                        .addComponent(itemBarcode, GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                                                                        .addComponent(jLabel5)
                                                                        .addComponent(itemSupplier, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                                        .addGroup(GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                                .addComponent(jLabel18)
                                                                                .addGap(79, 79, 79))
                                                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                                                .addGap(78, 78, 78)
                                                                                .addComponent(itemVATlow)
                                                                                .addGap(49, 49, 49)
                                                                                .addComponent(itemVAThigh)
                                                                                .addGap(0, 0, Short.MAX_VALUE))
                                                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                                                .addGap(48, 48, 48)
                                                                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                                                        .addComponent(itemSupplierNumber)
                                                                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                                                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                                                                        .addComponent(jLabel22)
                                                                                                        .addComponent(jLabel4))
                                                                                                .addGap(0, 0, Short.MAX_VALUE))
                                                                                        .addComponent(itemKbNumber, GroupLayout.Alignment.TRAILING))))))
                                                .addGap(10, 10, 10))
                                        .addGroup(GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                                .addComponent(jPanel3, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addContainerGap())
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(itemPriceList, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(itemSearchPriceList)
                                                .addContainerGap())
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                        .addComponent(itemShowInShop)
                                                        .addComponent(itemWeighAble))
                                                .addGap(18, 18, 18)
                                                .addComponent(jScrollPane1)
                                                .addContainerGap())))
                        .addGroup(GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel17, GroupLayout.PREFERRED_SIZE, 96, GroupLayout.PREFERRED_SIZE)
                                .addGap(84, 84, 84))
        );
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel3)
                                        .addComponent(itemListed)
                                        .addComponent(jLabel22))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(itemName, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(itemKbNumber, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel5))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(itemSupplierNumber, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(itemSupplier, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                .addGap(8, 8, 8)
                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel8))
                                .addGap(4, 4, 4)
                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(itemNetPrice, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(itemSellPrice, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel7)
                                        .addComponent(jLabel9))
                                .addGap(5, 5, 5)
                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(itemSingleDeposit, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(itemCrateDeposit, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel10)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(itemPriceList, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(itemSearchPriceList))
                                .addGap(8, 8, 8)
                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel12)
                                        .addComponent(jLabel11))
                                .addGap(2, 2, 2)
                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                                        .addComponent(itemAmount, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(itemUnit, GroupLayout.PREFERRED_SIZE, 22, GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel13)
                                        .addComponent(jLabel14))
                                .addGap(3, 3, 3)
                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(itemContainerSize, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(itemContainerDef, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel15)
                                        .addComponent(jLabel18))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(itemBarcode, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(itemVATlow)
                                        .addComponent(itemVAThigh))
                                .addGap(1, 1, 1)
                                .addComponent(jLabel17)
                                .addGap(3, 3, 3)
                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(itemShowInShop)
                                                .addGap(16, 16, 16)
                                                .addComponent(itemWeighAble))
                                        .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 82, GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(save)
                                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel2.setFont(new Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Artikeldaten");

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(195, 195, 195)
                                                .addComponent(jLabel2))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(jPanel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                                .addGap(28, 28, 28)
                                .addComponent(jPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(21, 21, 21))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel2)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jPanel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    Item getSelectedKbItem(){
        new EditItemView(this);
        return kbItems.getSelectedObject();
    }

    ItemKK getSelectedKkItem(){
        return kkItems.getSelectedObject();
    }

    void setPriceLists(Collection<String> priceLists){
        itemPriceList.removeAllItems();
        priceLists.forEach(itemPriceList::addItem);
    }

    void fillSupplier(Collection<Supplier> suppliers){
        suppliers.forEach(e -> itemSupplier.addItem(e.getName()));
    }

    void setSelectedPriceList(PriceList p){
        itemPriceList.setSelectedItem(p.getName());
    }

    private void filterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterActionPerformed
        requestFilter();
    }//GEN-LAST:event_filterActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        if(controller.save())
            JOptionPane.showMessageDialog(this,"Der Artikel wurde erfolgreich gespeichert!");
        else {
            JOptionPane.showMessageDialog(this,"Der Artikle überschneidet sich, Bitte überprüfen sie ob der \nBarcode oder die Kernbeissernummer noch nicht vergeben ist");
        }
        controller.loadSearchSolutions();
    }//GEN-LAST:event_saveActionPerformed

    private void itemSearchPriceListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemSearchPriceListActionPerformed
        JFrame jFrame = new JFrame();
        jFrame.setTitle("W\u00e4hlen sie eine Preisliste");
        jFrame.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        jFrame.setSize(400,600);
        jFrame.setLocationRelativeTo(null);
        PriceListTree priceListTree = new PriceListTree();
        priceListTree.addSelectionListener(e -> {
            controller.loadSearchSolutions();
            jFrame.dispose();
        });
        jFrame.add(new JScrollPane(priceListTree));
        jFrame.setVisible(true);
    }//GEN-LAST:event_itemSearchPriceListActionPerformed

    private void searchInCatalogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchInCatalogActionPerformed
        controller.loadSearchSolutions();
    }//GEN-LAST:event_searchInCatalogActionPerformed

    private void searchBarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchBarKeyReleased
        controller.loadSearchSolutions();
    }//GEN-LAST:event_searchBarKeyReleased
    private void requestFilter(){
        controller.requestFilter();
    }

    String getSearchBar(){
        return searchBar.getText();
    }

    boolean isSearchInCatalog(){
        return searchInCatalog.isSelected();
    }

    int getSelectedTab() {
        return searchSolutionPane.getSelectedIndex();
    }

    void setSelectedTab(int i){
        searchSolutionPane.setSelectedIndex(i);
    }

    void setSearchSolution(Collection<Item> items,Collection<ItemKK> kkItems){
        if(items!=null){
            kbItems.setObjects(items);
        }
        if(kkItems!=null){
            this.kkItems.setObjects(kkItems);
        }
    }


    Item collect(){
        Checker c = new Checker();
        try {
            Item item = new Item();
            item.setName(itemName.getText());
            item.setAmount(c.checkInteger(itemAmount));
            item.setNetPrice(c.checkPrice(itemNetPrice));
            if(itemSupplier.getSelectedItem()==null)throw new IncorrectInput(itemSupplier,Supplier.class);
            item.setSupplier(c.checkSupplier(itemSupplier));
            item.setBarcode(itemBarcode.getText().equals("")?null:c.checkLong(itemBarcode));
            item.setSpecialPriceNet(0);
            item.setVatLow(itemVAThigh.isSelected());
            //TODO item.setSurcharge(c.checkPrice(itemSellPrice) - c.checkPrice(itemNetPrice));
            item.setSingleDeposit(c.checkPrice(itemSingleDeposit));
            item.setCrateDeposit(c.checkPrice(itemCrateDeposit));
            item.setUnit(t.translate(Unit.class, itemUnit.getSelectedItem().toString()));
            if(itemPriceList.getSelectedItem()==null)throw new IncorrectInput(itemPriceList,PriceList.class);
            item.setPriceList(c.checkPriceList(itemPriceList));
            item.setContainerDef(t.translate(ContainerDefinition.class, itemContainerDef.getSelectedItem().toString()));
            item.setContainerSize(c.checkDouble(itemContainerSize));
            item.setSuppliersItemNumber(c.checkInteger(itemSupplierNumber));
            item.setWeighAble(itemWeighAble.isSelected());
            item.setListed(true);
            item.setShowInShop(itemShowInShop.isSelected());
            item.setDeleted(false);
            item.setPrintAgain(false);
            item.setDeleteAllowed(true);
            item.setLoss(0);
            item.setInfo(itemInfo.getText());
            item.setSold(0);
            item.setSpecialPriceMonth(new ArrayList<>());
            item.setDelivered(0);
            item.setInvShelf(new ArrayList<>());
            item.setInvStock(new ArrayList<>());
            item.setInvPrice(0);
            item.setIntake(Date.valueOf(LocalDate.now()));
            item.setLastBuy(null);
            item.setLastDelivery(null);
            item.setDeletedDate(null);
            item.setCooling(Cooling.NONE);
            item.setCoveredIntake(false);
            item.setKbNumber(c.checkInteger(itemKbNumber));
            return item;
        } catch (IncorrectInput incorrectInput) {
            incorrectInput.printStackTrace();
            if(incorrectInput.getComponent().getClass().equals(JComboBox.class))
                Tools.ping(incorrectInput.getComponent(),true);
            else
                Tools.ping(incorrectInput.getComponent());
            return null;
        }

    }
    void pasteData(Item item){
        itemKbNumber.setText(String.valueOf(item.getKbNumber()));
        itemName.setText(item.getName());
        itemInfo.setText(item.getInfo());
        itemSupplier.setSelectedItem(item.getSupplier().getName());
        itemSupplierNumber.setText(String.valueOf(item.getSuppliersItemNumber()));
        itemNetPrice.setText(String.valueOf(item.getNetPrice()));
        itemAmount.setText(String.valueOf(item.getAmount()));
        //TODO itemSellPrice.setText(String.valueOf(item.getSurcharge()+item.getNetPrice()));
        itemSingleDeposit.setText(String.valueOf(item.getSingleDeposit()));
        itemCrateDeposit.setText(String.valueOf(item.getCrateDeposit()));
        itemPriceList.setSelectedItem(item.getPriceList().getName());
        itemContainerSize.setText(String.valueOf(item.getContainerSize()));
        itemUnit.setSelectedItem(t.translate(item.getUnit()));
        itemContainerDef.setSelectedItem(t.translate(item.getContainerDef()));
        itemBarcode.setText(item.getBarcode()!=null?item.getBarcode().toString():"");
        itemVATlow.setSelected(item.isVatLow());
        itemVAThigh.setSelected(!item.isVatLow());
        itemShowInShop.setSelected(item.isShowInShop());
        itemLastBuy.setText(String.valueOf(item.getLastBuy()));
        itemLastDelivery.setText(String.valueOf(item.getLastDelivery()));
        itemSold.setText(String.valueOf(item.getSold()));
        itemLoss.setText(String.valueOf(item.getSold()));
        itemInvStock.setText(Tools.build(item.getInvStock(),0, Integer::sum).toString());
        itemInvPrice.setText(String.valueOf(item.getInvPrice()));
        itemWeighAble.setSelected(item.isWeighAble());
        itemListed.setText(item.isListed()?"Verf\u00fcgbar":"Ausgelisted");
        itemListed.setForeground(new Color(item.isListed()? 0x00EE00 : 0xEE0000));
    }
    void pasteData(ItemKK item){
        itemKbNumber.setText("0");
        itemName.setText(item.getName());
        itemSupplier.setSelectedItem(Supplier.getKKSupplier().getName());
        itemSupplierNumber.setText(String.valueOf(item.getKkNumber()));
        itemNetPrice.setText(String.valueOf(item.getNetPrice()));
        itemSellPrice.setText(String.valueOf(item.getNetPrice()));
        itemSingleDeposit.setText(String.valueOf(item.getSingleDeposit()));
        itemAmount.setText(String.valueOf(item.getAmount()));
        itemCrateDeposit.setText(String.valueOf(item.getCrateDeposit()));
        itemPriceList.setSelectedItem(PriceList.getSingleItemPriceList());
        itemContainerSize.setText(String.valueOf(item.getContainerSize()));
        itemUnit.setSelectedItem(t.translate(item.getUnit()));
        itemContainerDef.setSelectedItem(t.translate(ContainerDefinition.STATIC));
        itemBarcode.setText(item.getBarcode());
        itemVATlow.setSelected(item.isVatLow());
        itemVAThigh.setSelected(!item.isVatLow());
        itemShowInShop.setSelected(true);
        itemLastBuy.setText(String.valueOf(LocalDate.now()));
        itemLastDelivery.setText(String.valueOf(LocalDate.now()));
        itemSold.setText("0");
        itemLoss.setText("0");
        itemInvStock.setText("0");
        itemInvPrice.setText("0");
        itemWeighAble.setSelected(false);
    }
    void setFilters(){
        Tools.setDoubleFilter(itemNetPrice);
        Tools.setDoubleFilter(itemSingleDeposit);
        Tools.setDoubleFilter(itemCrateDeposit);
        Tools.setDoubleFilter(itemSellPrice);
        Tools.setRealNumberFilter(itemSupplierNumber);
        Tools.setDoubleFilter(itemContainerSize);
        Tools.setRealNumberFilter(itemKbNumber);
        Tools.setRealNumberFilter(itemAmount);
        Tools.setRealNumberFilter(itemBarcode);
    }

    @Override
    public ManageItemsController getController() {
        return controller;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JButton filter;
    private JTextField itemAmount;
    private JTextField itemBarcode;
    private JComboBox<String> itemContainerDef;
    private JTextField itemContainerSize;
    private JTextField itemCrateDeposit;
    private JTextArea itemInfo;
    private JLabel itemInvPrice;
    private JLabel itemInvStock;
    private JTextField itemKbNumber;
    private JLabel itemLastBuy;
    private JLabel itemLastDelivery;
    private JLabel itemListed;
    private JLabel itemLoss;
    private JTextField itemName;
    private JTextField itemNetPrice;
    private JComboBox<String> itemPriceList;
    private JButton itemSearchPriceList;
    private JTextField itemSellPrice;
    private JCheckBox itemShowInShop;
    private JTextField itemSingleDeposit;
    private JLabel itemSold;
    private JComboBox<String> itemSupplier;
    private JTextField itemSupplierNumber;
    private JComboBox<String> itemUnit;
    private JCheckBox itemVAThigh;
    private JCheckBox itemVATlow;
    private JCheckBox itemWeighAble;
    private JLabel jLabel1;
    private JLabel jLabel10;
    private JLabel jLabel11;
    private JLabel jLabel12;
    private JLabel jLabel13;
    private JLabel jLabel14;
    private JLabel jLabel15;
    private JLabel jLabel16;
    private JLabel jLabel17;
    private JLabel jLabel18;
    private JLabel jLabel19;
    private JLabel jLabel2;
    private JLabel jLabel20;
    private JLabel jLabel21;
    private JLabel jLabel22;
    private JLabel jLabel23;
    private JLabel jLabel24;
    private JLabel jLabel3;
    private JLabel jLabel4;
    private JLabel jLabel5;
    private JLabel jLabel6;
    private JLabel jLabel7;
    private JLabel jLabel8;
    private JLabel jLabel9;
    private JPanel jPanel1;
    private JPanel jPanel2;
    private JPanel jPanel3;
    private JScrollPane jScrollPane1;
    private JButton save;
    private JTextField searchBar;
    private JCheckBox searchInCatalog;
    private JTabbedPane searchSolutionPane;

    // End of variables declaration//GEN-END:variables
}
