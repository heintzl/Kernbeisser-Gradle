package kernbeisser.Windows.TabbedPane;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import java.awt.Dimension;
import java.awt.Insets;
import javax.swing.*;
import kernbeisser.Windows.MVC.IView;
import kernbeisser.Windows.MVC.Linked;
import org.jetbrains.annotations.NotNull;

public class TabbedPaneView implements IView<TabbedPaneController> {

  private JTabbedPane tabbedPane;
  private JPanel main;

  @Linked
  private TabbedPaneController controller;

  @Override
  public void initialize(TabbedPaneController controller) {
  }

  @Override
  public @NotNull JComponent getContent() {
    return main;
  }

  void removeTab(int index) {
    tabbedPane.removeTabAt(index);
    if (index != 0) {
      setSelected(0);
    }
  }

  public JTabbedPane getTabbedPane() {
    return tabbedPane;
  }

  public void setSelected(int index) {
    tabbedPane.setSelectedIndex(index);
  }

  {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
    $$$setupUI$$$();
  }

  /**
   * Method generated by IntelliJ IDEA GUI Designer >>> IMPORTANT!! <<< DO NOT edit this method OR
   * call it in your code!
   *
   * @noinspection ALL
   */
  private void $$$setupUI$$$() {
    main = new JPanel();
    main.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
    tabbedPane = new JTabbedPane();
    tabbedPane.setTabLayoutPolicy(0);
    main.add(tabbedPane,
        new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null,
            new Dimension(200, 200), null, 0, false));
  }

  /**
   * @noinspection ALL
   */
  public JComponent $$$getRootComponent$$$() {
    return main;
  }
}
